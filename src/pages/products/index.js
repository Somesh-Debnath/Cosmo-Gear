import Head from 'next/head'
import Link from 'next/link';
import { useEffect, useState } from 'react';
import {
  ApolloClient,
  InMemoryCache,
  gql
} from "@apollo/client";

import { buildImage } from '@lib/cloudinary';

import Layout from '@components/Layout';
import Header from '@components/Header';
import Container from '@components/Container';
import Button from '@components/Button';

import styles from '@styles/Page.module.scss'

export default function Index({ categories, products }) {
  console.log(categories)
  const [input, setInput] = useState('')
  const handleChange = (e) => {
    console.log(e.target.value);
    setInput(e.target.value)
  }

if(input){
  products = products.filter(product => {
    return product.name.toLowerCase().includes(input.toLowerCase())
  })
}

  return (
    <Layout>
      <Head>
        <title>Products</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container>
      
        <input type="text" placeholder="Search for Products...."
        value={input}
        onChange={handleChange} className={styles.input}/>
        
       <ul className={styles.categoryData}>
        <h3 className={styles.categoryTitle}>All items</h3>
        {categories.map(category => {
          return (
            <li key={category.id}>
              <Link href={`/categories/${category.slug}`}>
                <a>
                  <h3 className={styles.categoryTitle}>
                    { category.name }
                  </h3>
                </a>
              </Link>
            </li>
          )
        }
        )}
        </ul>

        <div className={styles.products}>
            {products.length>0 ?(
             products.map(product => {
                return (
                    <div key={product.slug}>
                    <Link href={`/products/${product.slug}`}>
                        <a>
                        <div className={styles.productImage}>
                            <img width={product.image.width} height={product.image.height} src={product.image.url} alt="" />
                        </div>
                        <h3 className={styles.productTitle}>
                            { product.name }
                        </h3>
                        <p className={styles.productPrice}>
                            { product.price }
                        </p>
                        </a>
                    </Link>
                    </div>
                )
            }
            )
            ) : (
                <h1 className={styles.productTitle}>No Products Found</h1>
              )}
        </div>        
      </Container>
    </Layout>
  )
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: process.env.NEXT_PUBLIC_GRAPHQL_URI,
    cache: new InMemoryCache()
  });

  const productsData = await client.query({
    query: gql`
    query MyQuery {
        products {
          id
          name
          image
          slug
          categories {
            id
            name
          }
        }
      }
    `,

  });

  const categoriesData = await client.query({
    query: gql`
        query CategoriesQuery {
            categories {
                id
                name
                slug
            }
        }
    `
})

  const products= productsData.data.products
  const categories = categoriesData.data.categories

  return {
    props: {
 categories,
  products
    }
  }
}

// export async function getStaticPaths() {
//   const client = new ApolloClient({
//     uri: process.env.NEXT_PUBLIC_GRAPHQL_URI,
//     cache: new InMemoryCache()
//   });

//   const data = await client.query({
//     query: gql`
//       query PageCategories {
//         categories {
//           id
//           slug
//         }
//       }

//     `
//   });

//   const paths = data.data.categories.map(category => {
//     return {
//       params: {
//         categorySlug: category.slug
//       }
//     }
//   })

//   return {
//     paths,
//     fallback: false
//   }
// }